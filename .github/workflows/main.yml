name: CI
on:
  push:
    branches:
      - master
  pull_request:
    branches: [master]

defaults:
  run:
    shell: bash
    working-directory: .

jobs:
  tests:
    runs-on: ubicloud
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Install dependencies
        run: uv sync
      - name: Run tests
        env:
          MAINNET_RPC_ENDPOINT: ${{ secrets.MAINNET_RPC_ENDPOINT }}
          DEVNET_RPC_ENDPOINT: ${{ secrets.DEVNET_RPC_ENDPOINT }}
        # run: uv run ruff format --check . && uv run bash scripts/ci.sh
        run: uv run bash scripts/ci.sh

  bump-version:
    runs-on: ubicloud
    needs: [tests]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10.10"
      - name: Run version bump script
        run: python scripts/bump.py
      - name: Commit changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add pyproject.toml src/driftpy/__init__.py .bumpversion.cfg
          git commit -m "Bump version [skip ci]"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

  release:
    runs-on: ubicloud
    needs: [bump-version]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Pull Latest Changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git pull
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install uv
        uses: astral-sh/setup-uv@v4
      - name: Build package
        run: uv build
      - name: Publish to PyPI
        run: uv publish --token ${{ secrets.PYPI_TOKEN }}
      - name: Get version
        id: get_version
        run: echo "VERSION=$(grep '^version = ' pyproject.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create v${{ steps.get_version.outputs.VERSION }} \
            --title "Release v${{ steps.get_version.outputs.VERSION }}" \
            --generate-notes \
            dist/*.whl dist/*.tar.gz
